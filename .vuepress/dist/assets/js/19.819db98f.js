(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{171:function(a,t,s){"use strict";s.r(t);var r=s(18),n=Object(r.a)({},function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"javascript-语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript-语法","aria-hidden":"true"}},[a._v("#")]),a._v(" javascript 语法")]),a._v(" "),s("p",[a._v("任何语言都有一套自己的语法，并且一系列的语法都很类似，只是在细节上有出入，掌握语法使阅读源码及使用高阶技巧事半功倍。")]),a._v(" "),s("h2",{attrs:{id:"变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量","aria-hidden":"true"}},[a._v("#")]),a._v(" 变量")]),a._v(" "),s("p",[a._v("javascript 的变量是松散类型的，也就是说，定义的变量可以保存任何类型的数据。")]),a._v(" "),s("h3",{attrs:{id:"定义变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义变量","aria-hidden":"true"}},[a._v("#")]),a._v(" 定义变量")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 会保存为 undefind")]),a._v("\n")])])]),s("p",[a._v("也可以连接定义多个变量")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" d"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("e"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("使用 "),s("code",[a._v("var")]),a._v("定义的变量将成为定义该变量作用域中的局部变量。")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("testContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" message "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'hello'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Uncaught ReferenceError: message is not defined")]),a._v("\n")])])]),s("div",{staticClass:"danger custom-block"},[s("p",{staticClass:"custom-block-title"},[a._v("WARNING")]),a._v(" "),s("p",[a._v("如果没有使用 "),s("code",[a._v("var")]),a._v("定义而直接赋值，在函数执行后，将创建一个全局变量。需要知道结果但是不建议这样做。\n并且在严格模式下，也会抛出错误。")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"use strict"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("testContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  message "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'hello'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("testContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// hello")]),a._v("\n")])])])]),a._v(" "),s("h2",{attrs:{id:"数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型","aria-hidden":"true"}},[a._v("#")]),a._v(" 数据类型")]),a._v(" "),s("p",[a._v("javascript 一共有六中数据类型，其中五种基本数据类型  "),s("code",[a._v("Undefined")]),a._v(" , "),s("code",[a._v("Null")]),a._v(" , "),s("code",[a._v("Boolean")]),a._v(" , "),s("code",[a._v("String")]),a._v(" , "),s("code",[a._v("Number")]),a._v(" ,\n一种复杂数据类型 "),s("code",[a._v("Object")]),a._v("。")]),a._v(" "),s("h3",{attrs:{id:"typeof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#typeof","aria-hidden":"true"}},[a._v("#")]),a._v(" typeof")]),a._v(" "),s("p",[a._v("监测数据类型 "),s("code",[a._v("typeof")]),a._v(" 监测出的结果并不是和数据类型一一对应。并且在 es6 以后，这个操作并不是完全安全的了。")]),a._v(" "),s("ul",[s("li",[a._v("undefined")]),a._v(" "),s("li",[a._v("boolean")]),a._v(" "),s("li",[a._v("string")]),a._v(" "),s("li",[a._v("number")]),a._v(" "),s("li",[a._v("object")]),a._v(" "),s("li",[a._v("function\n其中需要单独记忆几个难以理解的返回")])]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("typeof")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// object")]),a._v("\n监测未定义变量也不会报错\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("typeof")]),a._v(" age "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// undefined")]),a._v("\n")])])]),s("h3",{attrs:{id:"number"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#number","aria-hidden":"true"}},[a._v("#")]),a._v(" Number")]),a._v(" "),s("p",[a._v("javascript 使用 IEEE754 浮点计数。")]),a._v(" "),s("h4",{attrs:{id:"整数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#整数","aria-hidden":"true"}},[a._v("#")]),a._v(" 整数")]),a._v(" "),s("p",[a._v("整数也可以用八进制、十六进制表示,但是八进制在严格模式下无效。")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[a._v("070")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("===")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("56")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("===")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0x038")]),a._v("\n")])])]),s("h4",{attrs:{id:"浮点数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浮点数","aria-hidden":"true"}},[a._v("#")]),a._v(" 浮点数")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" floatNum3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v(".1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 有效，但不推荐")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" floatNum1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 小数点后面没有数字——解析为 1")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" floatNum2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 整数——解析为 10")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" floatNum "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3.125e7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 等于 31250000")]),a._v("\n")])])]),s("h4",{attrs:{id:"浮点计算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浮点计算","aria-hidden":"true"}},[a._v("#")]),a._v(" 浮点计算")]),a._v(" "),s("p",[a._v("不要使用浮点数进行校验")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("===")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.3")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// false")]),a._v("\n")])])]),s("h4",{attrs:{id:"常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常量","aria-hidden":"true"}},[a._v("#")]),a._v(" 常量")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[a._v("Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("MIN_VALUE")]),a._v("\nNumber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("MAX_VALUE")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("Infinity")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("Infinity")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("NaN")]),a._v("\n")])])]),s("h4",{attrs:{id:"number-转换规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#number-转换规则","aria-hidden":"true"}},[a._v("#")]),a._v(" Number 转换规则")]),a._v(" "),s("blockquote",[s("p",[a._v("摘自JavaScript 高级程序设计。")])]),a._v(" "),s("ul",[s("li",[a._v("如果是 Boolean ， 转换为 0 或 1 。")]),a._v(" "),s("li",[a._v("如果是数值，传入传出。")]),a._v(" "),s("li",[a._v("null , 0 。")]),a._v(" "),s("li",[a._v("undefined , NaN 。")]),a._v(" "),s("li",[a._v("如果是字符串，遵循下列规则：\n"),s("ul",[s("li",[a._v('如果字符串中只包含数字（包括前面带正号或负号的情况），则将其转换为十进制数值，即"1"\n会变成 1，"123"会变成 123，而"011"会变成 11（注意：前导的零被忽略了）；')]),a._v(" "),s("li",[a._v('如果字符串中包含有效的浮点格式，如"1.1"，则将其转换为对应的浮点数值（同样，也会忽\n略前导零）；')]),a._v(" "),s("li",[a._v('如果字符串中包含有效的十六进制格式，例如"0xf"，则将其转换为相同大小的十进制整\n数值；')]),a._v(" "),s("li",[a._v("如果字符串是空的（不包含任何字符），则将其转换为 0；")]),a._v(" "),s("li",[a._v("如果字符串中包含除上述格式之外的字符，则将其转换为 NaN。")])])]),a._v(" "),s("li",[a._v("如果是对象，则调用对象的 valueOf()方法，然后依照前面的规则转换返回的值。如果转换\n的结果是 NaN，则调用对象的 toString()方法，然后再次依照前面的规则转换返回的字符\n串值。")])]),a._v(" "),s("h4",{attrs:{id:"parseint-转换规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parseint-转换规则","aria-hidden":"true"}},[a._v("#")]),a._v(" parseInt 转换规则")]),a._v(" "),s("p",[a._v("parseInt 首先忽略空格。")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('" 2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 2")]),a._v("\n")])])]),s("p",[a._v("然后会验证是否以数字开头,如果是数字开头，会解析遇到非数字之前的字符串。")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"a2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// NaN")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"2asdasd"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 2")]),a._v("\n")])])]),s("p",[a._v("另外，parseInt 也可以识别八进制和十六进制。")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"070"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 70")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("070")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 56")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0xf"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 2")]),a._v("\n")])])]),s("div",{staticClass:"danger custom-block"},[s("p",{staticClass:"custom-block-title"},[a._v("WARNING")]),a._v(" "),s("p",[a._v("JavaScript 高级程序设计中")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"070"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 56")]),a._v("\n")])])]),s("p",[a._v("在 es3 中才有效，es5 中会得到 70，尽可能不要使用八进制。")])]),a._v(" "),s("p",[a._v("所以为了避免这种困惑，可以加入第二个参数。")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"070"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 56 代表以八进制解析")]),a._v("\n")])])]),s("h4",{attrs:{id:"parsefloat-转换规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parsefloat-转换规则","aria-hidden":"true"}},[a._v("#")]),a._v(" parseFloat 转换规则")]),a._v(" "),s("p",[a._v("parseFloat 转换规则与 parseInt 类似。区别是：")]),a._v(" "),s("ul",[s("li",[a._v("忽略前导 0 。")]),a._v(" "),s("li",[a._v("第一个小数点有效，之后的就无效了。")])]),a._v(" "),s("h3",{attrs:{id:"string-类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string-类型","aria-hidden":"true"}},[a._v("#")]),a._v(" String 类型")]),a._v(" "),s("p",[a._v("ECMAScript 中的字符串是不可变的，也就是说，字符串一旦创建，它们的值就不能改变。")]),a._v(" "),s("h4",{attrs:{id:"字符字面量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符字面量","aria-hidden":"true"}},[a._v("#")]),a._v(" 字符字面量")]),a._v(" "),s("blockquote",[s("p",[a._v("摘自JavaScript 高级程序设计。")])]),a._v(" "),s("img",{attrs:{src:a.$withBase("/javascript/charobj.png"),alt:"charobj"}}),a._v(" "),s("p",[a._v("字符字面量的长度是 1 。")]),a._v(" "),s("h4",{attrs:{id:"字符串转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串转换","aria-hidden":"true"}},[a._v("#")]),a._v(" 字符串转换")]),a._v(" "),s("p",[a._v("字符串转换可以使用以下方式")]),a._v(" "),s("ul",[s("li",[a._v("+ 操作符")]),a._v(" "),s("li",[a._v("String() 函数")]),a._v(" "),s("li",[a._v("toString() 方法")])]),a._v(" "),s("p",[a._v("只有 "),s("code",[a._v("null")]),a._v(" 、 "),s("code",[a._v("undefined")]),a._v(" 没有 "),s("code",[a._v("toString()")]),a._v(" 方法。"),s("code",[a._v("String()")]),a._v(" 函数的规则：如果有 "),s("code",[a._v("toString()")]),a._v(" 方法，使用；如果是 "),s("code",[a._v("null")]),a._v("，\n返回 "),s("code",[a._v("null")]),a._v("；如果是  "),s("code",[a._v("undefined")]),a._v(" 返回 "),s("code",[a._v("undefined")]),a._v(" 。")]),a._v(" "),s("h3",{attrs:{id:"object-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object-对象","aria-hidden":"true"}},[a._v("#")]),a._v(" Object 对象")]),a._v(" "),s("p",[a._v("javascript 中的对象是一组数据和功能的集合。它是一种引用类型。")]),a._v(" "),s("h4",{attrs:{id:"实例方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例方法","aria-hidden":"true"}},[a._v("#")]),a._v(" 实例方法")]),a._v(" "),s("ul",[s("li",[a._v("constructor")]),a._v(" "),s("li",[a._v("hasOwnProperty(propertyName)")]),a._v(" "),s("li",[a._v("isPropertyOf(object)")]),a._v(" "),s("li",[a._v("propertyIsEnumberable(propertyName)")]),a._v(" "),s("li",[a._v("toLocalString()")]),a._v(" "),s("li",[a._v("toString()")]),a._v(" "),s("li",[a._v("valueOf()")])]),a._v(" "),s("h3",{attrs:{id:"操作符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#操作符","aria-hidden":"true"}},[a._v("#")]),a._v(" 操作符")]),a._v(" "),s("h4",{attrs:{id:"一元操作符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一元操作符","aria-hidden":"true"}},[a._v("#")]),a._v(" 一元操作符")]),a._v(" "),s("p",[a._v("前置：变量的值在求值前改变\n后置：变量的值在求值后改变")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nb "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// b === 1")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nd "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" c"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// d === 0")]),a._v("\n")])])]),s("h4",{attrs:{id:"位操作符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#位操作符","aria-hidden":"true"}},[a._v("#")]),a._v(" 位操作符")]),a._v(" "),s("p",[a._v("ECMAscript 以 IEEE-754 64位存储数值，之前已经了解了这种方式存储对浮点数造成的计算影响。javascript 并不能直接操作 64 位的值，所以\n要先将 64 位转换为 32 位，在进行计算。其中 31 位表示数值，一位表示符号。")]),a._v(" "),s("p",[s("strong",[a._v("二进制补码")])]),a._v(" "),s("ul",[s("li",[a._v("求数值绝对值的二进制码")]),a._v(" "),s("li",[a._v("求二进制反码")]),a._v(" "),s("li",[a._v("加 1\nECMAscript 由于操作时需要转换 64 位数，产生了一个问题，在转换 NaN 及 Infinity 时会被当做 0 处理。")])]),a._v(" "),s("h4",{attrs:{id:"按位非-（-）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#按位非-（-）","aria-hidden":"true"}},[a._v("#")]),a._v(" 按位非 （~）")]),a._v(" "),s("p",[a._v("按位非就是执行数值二进制的反码。")]),a._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),s("p",[s("code",[a._v("~num")]),a._v(" 的结果就是数值的负数减 1 。")])]),a._v(" "),s("h4",{attrs:{id:"按位与（-）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#按位与（-）","aria-hidden":"true"}},[a._v("#")]),a._v(" 按位与（&）")]),a._v(" "),s("p",[a._v("按位与就是将两数的数位对其，然后根据 & 的规则执行每一位。")]),a._v(" "),s("h4",{attrs:{id:"按位或（-）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#按位或（-）","aria-hidden":"true"}},[a._v("#")]),a._v(" 按位或（|）")]),a._v(" "),s("p",[a._v("按位与就是将两数的数位对其，然后根据 | 的规则执行每一位。")]),a._v(" "),s("h4",{attrs:{id:"按位异或（-）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#按位异或（-）","aria-hidden":"true"}},[a._v("#")]),a._v(" 按位异或（^）")]),a._v(" "),s("p",[a._v("按位异或就是将两数的数位对其，然后根据 ^ 的规则执行每一位。")])])},[],!1,null,null,null);n.options.__file="syntax.md";t.default=n.exports}}]);